JQuery
1.jquery介绍
2.jquery基本语法
3.选择器
4.属性和Css
5.文档处理
	1.jquery介绍
		javaScript库封装了很多预定义的对象和实用函数
		免费 开源 轻量级
		主要分为四个分类
			WEB版本
			UI版本 集成了UI组件
			mobile版本 针对移动端开发
			qunit版本 用js测试的
	当前流行的javascript库
		jquery最流行
		Dojo 很多js单独文件 常用开发的小图标
		Prototype 对js扩展 框架开发
		YUI  (Yahoo User Interface) 淘宝之前使用
			http:///docs.kissyui.com
		Bootstrap 来自 Twitter 是目前比较新的前端框架 基于jquery的一个UI工具

	版本介绍
		jquery-2.1.0.js 2.0版本开始 不支持ie 6/7/8
	优点:
		轻量级
		核心理念 write less,do more(写的更少,做的更多)
		兼容各种浏览器 ie safari opera
		开发更便捷
		支持文档对象操作/选择DOM元素/制作动画效果/事件处理/使用ajas....
		jquery能够保证用户的html页面代码和html内容分离
		不用再在html里面插入一堆js 只需要定义id即可
		jquery的API成熟 文档说明很全
2.基本语法
	2.1 jquery语法
		$(选择符).方法名()

		$美元符号 定义 jquery
		选择符-->"查找"和"查询"html元素
		.方法名()-->jquery的方法 执行对元素的操作

	强调 js执行时 有加载顺序
	
	2.2 jquery对象和dom对象转换
		<script>
			//1.使用javascript获得value值
			var username = document.getElementById("username");
			
			//2.将dom对象 转换成 jQuery对象
			//语法 $(dom对象)
			var $username = $(username);
			alert($username.val());
			
			//3.将jquery对象 转换成dom对象
			// 3.1 jquery对象内部使用[数组]存放所有的数据 可以通过数组的索引获取数据
			var username2 = $username[0];
			alert(username2.value);
			//3.2 使用jquery的get()函数 来转换成dom对象
			var username3 = $username.get(0);
			alert(username3.value);
		</script>
3.选择器(掌握)
	css选择器包括 通配符/id/属性/类
	3.1基本(掌握)
		#id id选择器
		element 标签选择器
		.class 类选择器
		* 所有
		selector1,selector2,selectorN 多选择器 将多个选择器的结果添加到一个数组中
	3.2层级
		ancestor descendant 获得ancestor元素内部所有的descendant后代元素(爷孙)
		parent > child 获得parent元素内部所有的child子元素(父子)
		prev + next 获得prev元素后面的第一个next兄弟(兄弟)
		prev ~ siblings 获得prev元素后面的所有的兄弟siblings(兄弟)

		siblings([expr]) 获得同级的所有兄弟
			取得一个包含匹配的元素集合中每一个元素的所有唯一同辈元素的元素集合。可以用可选的表达式进行筛选。
	3.3基本过滤
		过滤选择器格式 ":关键字"
		:first 第一个
		:last 最后一个
		:not(selector) 去除所有与给定选择器匹配的元素
		:even 偶数 从0开始计数 索引
		:odd  奇数
		:eq(index) 获得指定索引
		:gt(index) 大于
		:lt(index) 小于
		:header 所有标题元素 例如 <h1>...<h6>
		:animated 获得所有的动画
		:focus 1.6+ 获得焦点
	3.4内容过滤
		:contains(text) 标签体是否包含指定的文本
		:empty 当前元素是否为空(是否有标签体 子元素 文本)
		:has(selector) 当前元素 是否包含有指定的子元素
		:parent 当前元素是否是父元素
	3.5可见性过滤
		:hidden 隐藏 特指<xxx style="display:none;"> <input type="hidden">
		:visible 可见(默认)
	3.6属性
		[attribute] 获得指定的属性名的元素
		[attribute=value]  获得属性名 等于 指定值的元素
		[attribute!=value] 获得属性名 不等于 指定值的元素
		[attribute^=value] 获得以属性值 开头的元素
		[attribute$=value] 获得以属性值 结尾的元素
		[attribute*=value] 获得含有属性值 的元素
		[attrSel1][attrSel2][attrSelN] 复合选择器 多个条件同时成立 类似 where and...and...
	3.7子元素
		:nth-child(index) 获得第几个孩子 从1开始
		:first-child 第一个孩子
		:last-child  最后一个孩子
		:only-child  获得独生子

		/* 注意
		 * $(div.one) : class为one的div 元素
		 * $(div .one): div下面所有class为one的元素
		 * */
	3.8表单
		:input 所有的表单元素 (input/select/textarea/button)
		:text 
		:password 
		:radio 
		:checkbox 
		:submit 选择type=submit的按钮 如果<button>元素没有定义类型 大多数浏览器会将它当做submit
			
		:image 图片按钮
		:reset 
		:button 所有的普通按钮<button> 或者<input type="button"> 
		:file 
		:hidden 隐藏域<input type="hidden"> 或者 <xxx style="display:none">
				其他值<br> <option> 存在浏览器兼容性问题
	3.9表单对象属性
		:enabled 可用
		:disabled  不可用 <xxx disabled="disabled"> 或 <xxx disabled=""> 或 <xxx disabled>
		:checked  选中 单选框 复选框
		:selected 选择 下拉列表 select option
4.属性和CSS
	属性
		attr(name|pro|key,val|fn)  
			attr(name) 获得指定属性名的值
			attr(key,val) 给一个指定属性名设置值
			
		removeAttr(name) 移除指定属性
		prop(n|p|k,v|f)1.6+ 给多个属性名设置值 参数 prop json数据
				{k:v,k:v....}
		removeProp(name)1.6+ 
	CSS 类
		addClass(class|fn)  追加一个类
		removeClass([class|fn]) 将指定类移除
		toggleClass("my") 如果有my 将移除 如果没有就添加
	HTML代码/文本/值
		html() 获得html代码 含有html标签
			html([val|fn]) 设置html代码 如果有标签 将进行解析
		text() 获得文本值 将标签过滤掉
			text([val|fn]) 设置文本值 如果有标签 将被转译
		val() 获得value的值 
			val([val|fn|arr]) 设置value的值
	CSS
		css(name|pro|[,val|fn])1.8* 
		<xxx style="key:value;key2:value2;....">
		css(name) 获得指定名称的css值
		css(name,value)设置一对值
		css(prop) 设置一组值
	位置
		offset([coordinates]) 设置坐标 例如:$(this).offset({"top":0,"left":100});
		position() 
		scrollTop([val]) 垂直滚动条 滚过的距离
		scrollLeft([val]) 水平滚动条 滚过的距离
	尺寸
		heigh([val|fn]) 获得 或者 是 设置 高度
		width([val|fn]) 获得 或者 是 设置 宽度
		innerHeight() 
		innerWidth() 
		outerHeight([soptions]) 
		outerWidth([options]) 
5.文档处理
	5.1 内部插入[掌握]
		A.append(B) 
			将B插入到A的内部后面
			<A>
				.....
				<B></B>
			</A>
		A.prepend(B) 
			将B插入到A的内部前面
			<A>
				<B></B>
				.....
				
			</A>

		A.appendTo(B) 
			将A插入到B的内部后面
		A.prependTo(B) 
			将A插入到B的内部前面

	5.2 外部插入[掌握](同级)
		A.after(B) 
			将B插入到A后面(同级)
			<A></A>
			<B></B>
		A.before(B) 
			将B插入到A前面
			<B></B>
			<A></A>
			
		A.insertAfter(B) 
			将A插入到B后面
			<B></B>
			<A></A>
		A.insertBefore(B) 
			将A插入到B前面
			<A></A>
			<B></B>
			
	5.3 包裹
		wrap(html|ele|fn) 
		unwrap() 
		wrapall(html|ele) 
		wrapInner(html|ele|fn) 
	5.4 替换
		replaceWith(content|fn) 
		replaceAll(selector) 
	5.5 删除
		empty() 
		remove([expr]) 
		detach([expr]) 
	5.6 复制
		clone([Even[,deepEven]]) 






