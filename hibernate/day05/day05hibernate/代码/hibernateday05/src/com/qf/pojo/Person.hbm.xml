<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
    <!-- hql语句会自动导包  -->
    <hibernate-mapping auto-import="true">
    <!-- 配置javabean和数据库表的映射
    	class
    		name:表示类的全限定名（包名+类型）
    		table:表名
    		dynamic-insert="true" 
    		lazy="true"懒加载
    		lazy="false" 立即检索
     -->
    <class name="com.qf.pojo.Person" table="tb_person">
    	<!-- 配置主键
    		id 
    			name:javabean的属性名
    			column:数据库的字段名
    	 -->
    	<id name="pid" column="pid">
    	<!-- 主键生成策略  
    		 native:采取本地数据库的一个主键生成策略  mysql:自增长    oracle:序列   
			 increment:自增长  先去查询数据库表中的id的最大值 select max(id)  最大值加1当做主键
			 identity: 自增长  auto_increment
			 uuid:产生一个32位的uuid随机数当做主键   varchar()
			 assigned:主键不让hibernate管理，自己赋值
			 sequence:oracle数据库支持的序列
			 
    	
    	
    	
    	-->
    		<generator class="native"></generator>
    	</id>
    	
    	
    	<!-- 配置普通属性 -->
    	<property name="pname"></property>
    	<property name="sex"></property>
    	
    	<!-- 
    	
    		一对多：双方都可以维护外键 
    		多对多：也是双方都维护外键  双向保存的时候  必须要有一方放弃对外间的维护
    		
    		一对一：只能是外键所在方对外键进行维护
    		
    	cascade="save-update"  保存person的时候级联保存card   person不维护外键 
    	
    	 -->
    	<one-to-one cascade="save-update"  name="card" class="com.qf.pojo.Card" property-ref="person"></one-to-one>
    	
    	
    </class>
  
    </hibernate-mapping>