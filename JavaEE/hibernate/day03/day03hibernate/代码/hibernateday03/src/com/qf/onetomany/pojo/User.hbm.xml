<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
    
    <hibernate-mapping>
    <!-- 配置javabean和数据库表的映射
    	class
    		name:表示类的全限定名（包名+类型）
    		table:表名
    		dynamic-insert="true" 
     -->
    <class name="com.qf.onetomany.pojo.User" table="tb_user" dynamic-insert="true" dynamic-update="true">
    	<!-- 配置主键
    		id 
    			name:javabean的属性名
    			column:数据库的字段名
    	 -->
    	<id name="uid" column="uid">
    	<!-- 主键生成策略  
    		 native:采取本地数据库的一个主键生成策略  mysql:自增长    oracle:序列   
			 increment:自增长  先去查询数据库表中的id的最大值 select max(id)  最大值加1当做主键
			 identity: 自增长  auto_increment
			 uuid:产生一个32位的uuid随机数当做主键   varchar()
			 assigned:主键不让hibernate管理，自己赋值
			 sequence:oracle数据库支持的序列
			 
    	
    	
    	
    	-->
    		<generator class="native"></generator>
    	</id>
    	<!-- 配置普通属性 -->
    	<property name="uname"></property>
    	<property name="ugender"></property>
    	
    	<!-- 在一方中配置set集合 
    	set 
    		name:就是写一方中的多方集合的属性名
    	inverse="false" inverse是把维护外键的交给对方处理      维护外键
    	-->
    	
    	<set name="orderSet" cascade="delete,save-update" inverse="true" >
    	<!-- key 配置多方中的外键名
    	
    			column：外键名 -->
    	<key column="user_order_id"/>
    	<!-- 写一方中set集合里面的类的全限定名 -->
    	<one-to-many class="com.qf.onetomany.pojo.Order"/>
    	
    	</set>
    	
    	
 
    
    </class>
    </hibernate-mapping>