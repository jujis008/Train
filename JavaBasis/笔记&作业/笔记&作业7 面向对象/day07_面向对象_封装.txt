面向对象三大特征
一.封装
   1.封装
	
	广义:类和方法定义本身,就是封装性的体现
	狭义: private + set/get方法
		是指隐藏对象的属性和实现细节,仅对外提供公共的访问方式


	//private 私有 被私有修饰的成员 只能在当前类中使用
	关键字特点:
		1.是个权限修饰符
		2.可以修饰成员变量和成员方法
		3.被其修饰的成员 只能在本类中被访问
	当你将一个成员变量用 private 修饰后 如果想要在其他类中调用 需要提供对应的setXxx() getXxx()方法
	
	private仅仅是封装的一种体现形式,不能说封装就是私有

	好处:
		1.隐藏实现细节,提供公共的访问方式
		2.提高代码/数据 安全性
		3.提高了代码的复用性

   2.构造函数(Constructor)
	什么是构造函数?
		构造器/构造方法 用来创建对象并给成员变量初始化的
		格式:
			访问权限修饰符(可略) 没有返回值 方法名(和类名一模一样){
				//方法体
			}
		特点:
			1.方法名和类名相同(大小写也要相同)
			2.没有返回值类型 连void 都没有
			3.访问权限修饰符 可省略
			4.没有具体的返回值 return
			5.在创建对象的时候,jvm会给我们调用构造方法 构造方法不能用对象.调用
	注意:
		当自己写了构造方法 那么jvm将不再给你提供无参的构造方法了
			如果想要写有参构造 那么 无参构造也写上
		有参构造 只是多了一种对成员变量的赋值方式
   3.this关键字
	this.成员
		属性:访问本类的成员属性
		方法:访问本类的成员方法
	this();
		访问本类中的构造函数
	this-->指的就是当前类对象的一个引用
		//错误: 对this的调用必须是构造器中的第一个语句
		/*
		this.name = name;
		this(name);
		初始化的动作要先执行 如果初始化中还有初始化 那么先执行那个更细节的初始化
   4.方法的参数传递
   5.static关键字
   6.工具类
   7.Math类中的生成伪静态随机数方法
   8.单例设计模式