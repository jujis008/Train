基础题:
1、设计一个交通工具抽象类，提供抽象方法--驾驶
	   汽车作为交通工具的一种，实现了驾驶的方法(在马路上驾驶)
	   火车作为交通工具的一种，实现了驾驶的方法(在铁路上驾驶)
	   飞机作为交通工具的一种，实现了驾驶的方法(在天上驾驶)
	   需求：做一个测试类，在测试类的main函数中，分别实例化一个汽车的对象，火车的对象和飞机的对象，并分别描述驾驶行为

2、设计一个家政服务规范: 洗衣服, 扫地, 买菜, 做饭
		设计一个保姆类, 保姆需要遵循这些规范
		需求：在测试类中，实例化一个保姆的对象，然后让保姆买菜，做饭，扫地

3．（*）按如下要求编写Java应用程序：

（1）编写一个用于表示战斗能力的接口Fightable，该接口包含：整型常量MAX；方法void win()，用于描述战斗者获胜后的行为；方法int injure(int x)，用于描述战斗者受伤后的行为。

（2）编写一个非抽象的战士类Warrior，实现接口Fightable。该类中包含两个整型变量：经验值experience和血液值blood。当战士获胜后经验值会增加，而受伤后血液值会减少x，并且当战斗者的血液值低于MAX时会输出危险提示。

（3）编写战士类Warrior的子类BloodWarrior，该类创建的战士在血液值低于MAX/2时才会输出危险提示。

（4）编写主类TestWarrior，对上述接口和类进行测试。

4．（*）按如下要求编写Java程序：

（1）编写一个接口：OneToN，只含有一个方法int dispose(int n)。

（2）编写一个非抽象类Sum来实现接口OneToN，实现int dispose (int n)接口方法时，要求计算1 + 2 + … + n。

（3）编写另一个非抽象类Pro来实现接口OneToN，实现int dispose (int n)接口方法时，要求计算1 * 2 * … * n。

（4）编写测试类Test，在main方法中使用接口回调技术来测试实现接口的类。

5．（*）按如下要求编写Java程序：

（1）编写接口InterfaceA，接口中含有方法void printCapitalLetter()。

（2）编写接口InterfaceB，接口中含有方法void printLowercaseLetter()。

（3）编写非抽象类Print，该类实现了接口InterfaceA和InterfaceB。要求printCapitalLetter()方法实现输出大写英文字母表的功能，printLowercaseLetter()方法实现输出小写英文字母表的功能。

（4）再写一个主类Test，在main方法中创建Print的对象并赋值给InterfaceA的变量a，由变量a调用printCapitalLetter方法，然后再创建Print的对象并将该对象赋值给InterfaceB的变量b，由变量b调用printLowercaseLetter方法。

6.（*）按如下要求编写Java程序：

（1）定义一个交通工具收费接口Charge，该接口包含两个元素：一个收取费用的方法double getFee(intdistance)，distance代表交通工具行驶的公里数；一个成员变量MAX，表示每次收取费用的最大值。

（2）定义列车类Train来实现这个接口，收费规则自行定义。

（3）定义主类Test，在main方法中输出收取费用的最大值，和行使2000公里后列车应收取的费用。

7.（*）设计一个Student接口，以一维数组存储一个班级的学生姓名。该接口中有一个抽象方法getStudentName()。设计一个类Union，该类实现接口Student中的方法getStudentName()，其功能是获取学生姓名并显示。

8.（*）按如下要求编写Java程序：

（1）定义接口A，里面包含值为3.14的常量PI和抽象方法double area()。

（2）定义接口B，里面包含抽象方法void setColor(String c)。

（3）定义接口C，该接口继承了接口A和B，里面包含抽象方法void volume()。

（4）定义圆柱体类Cylinder实现接口C，该类中包含三个成员变量：底圆半径radius、圆柱体的高、颜色
 
（5）创建主类来测试。

提高题:

有30个人(15个基督教徒和15个非教徒)坐船 船坏 要把15个人扔到海里其他人才能得救
 围成一圈从某个人开始从1报数 报到9的人扔到海里 下一个人继续从1开始报数 报到9扔到海里
 以此类推 直到把15个人扔到海里为止 结果由于上帝的保佑 15个基督教徒都幸免于难 
 问这些人最初是怎么站的 哪些位置是基督徒 哪些位置是非教徒 --- Josephu环(约瑟夫环)

 解题思路：创建一个大小为30的数组 
	   一开始所有人都是活的(用boolean来表示人都是活的)
	   需要记录下被扔进海里的人数(counter)
	   需要记录人的位置-->数组的下标(index)
	   需要记录报的数(nunmber)
		(报的数如果是9――>该人就扔进海里(表示此人已死)――>counter就会加1)
	   由于需要扔进海里15人(循环15次)
提示：活的人才等报数
      每次报完数(意思是每次报到9又要从1开始)
      
结果显示如下:

基基基基非非非非非基基非基基基非基非非基基非非非基非非基基非
