一.接口
	什么是接口:前期理解 可以理解为是一个特殊的抽象类
	当抽象类中的方法都是抽象的,那么该类可以通过接口的形式来定义

	class:用于定义类
	interface:用于定义接口
 1,语法:
	访问权限修饰符 interface 接口名{
		//全局常量
		//抽象方法
	}
	接口中的成员修饰符是固定的
		成员变量: public static final
		成员函数: public abstract
	如果不写 默认会给加上 只要是定义为接口 interface 那么成员的修饰符就是固定的 建议写上

	implements: 实现
	类与接口的关系 实现

	继承:extends

2.特点:
	1.接口是一个特殊的抽象类 特殊在"接口中所有的属性都是常量,方法都是抽象的"
	2.接口允许多实现 弥补了java在类之间单继承的不足 因为接口中的抽象类没有方法体 实现谁都行 不冲突
	3.java中允许单继承 的同时 实现多个接口
	4.接口与接口之间 也有关系 接口继承接口 一个接口可以继承多个接口 因为都是抽象的

	剪短版:
		1.接口可以用来多实现
		2.类与接口之间是实现关系 而且类继承一个类的同时 可以实现多个接口
		3.接口与接口之间可以有多继承关系
3.接口的好处
	它是对外暴露的规则 提高了程序的扩展性
	封装 保证了程序的安全性
4.接口的本质
	从接口设计的角度而言 接口中定义了一套规则和标准