泛型
	规定容器存储的数据类型是什么

	数组相对安全 因为再创建的时候 就规定了存储的数据是什么类型的
	为了提高安全性 我们给集合设置一个指定的存储类型
泛型的基本使用
	<> 中放的必须是引用数据类型

	泛型 将运行时异常 转移到了编译时 方便解决
泛型分类
	1.泛型类
		把泛型定义在类上
		格式:
			权限修饰符 class 类名<泛型类型1,泛型类型2....>{
			
			}
		为什么要定义泛型类
			当类中操作的引用数据类型 不确定的时候 定义泛型来完成确定
		泛型的参数名<参数名>
			必须是合法的标识符 数字 字符 下划线 $ 组成 但是 不能以数字开头
		至于泛型到底是何种类型 由调用者来决定
	2.泛型方法
		格式:
			权限修饰符<类型1,类型2...> 返回值类型 方法名(参数列表){
				方法体
			}
		泛型的声明 必须在方法修饰符 public static final abstract等之后 返回值声明之前
		可以声明多个 和泛型类一样 用逗号分隔
	3.泛型接口
		格式:
			访问权限修饰符 interface 接口名<类型1,....>{
			
			}
	4.泛型高级通配符
		? 通配符 代表的某个
		泛型限定
		<? extends 类> ? 代表的类型是 [类] 的子类 或 [类]本身
				向下限定 类及其子类

		<? super 类>   ? 代表的类型是 [类]类型 或 当前[类]的父类
				向上限定 类及其父类
		