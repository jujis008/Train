多线程并发下载

分析:
	1.获取要下载的文件路径
		首先要得到下载文件的长度 然后设置本地文件的长度

	2.根据文件长度和线程数量 来计算每条线程需要下载的长度和下载位置
		例如: 文件的长度是6M 线程数为3 那么每条线程下载的数据长度 2M

	3.使用Http的Range头字段指定每条线程从文件的什么位置开始下载
		例如: 指定从文件的2M的位置开始下载文件
	
什么是Range?
	当用户在听一首歌的时候 听到一半 网断了
	用户继续听 在网络恢复后 则向服务器发送读取 剩余Range的请求
	服务器只需要发送客户端请求的那部分内容 而不是整个文件 以此节省网络带宽

	Range: bytes=0-xxx

	4.保存文件
		使用RandomAccessFile 类 指定每条线程从本地文件的什么位置开始存数据
1类 Demo类 测试
	1.方法 download方法 
	下载文件用的
		path 网络文件的路径 http://10.40.155.230:8080/down/down.mp3
		threadSize 线程个数 3
	2.方法 main()测试函数

2线程类 DownloadThread