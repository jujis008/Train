1.java的注释
	被包裹的内容 不运行 只是用来给程序员阅读的
	1.单行注释 //被注释的内容
	2.对行注释 /*被注释的内容*/
	3.文档注释 /** */ 执行 javadoc 类名.java 可以生成程序使用说明书 index.html
2.标识符,命名规则
	java对 包/类/方法/参数和变量等要命名时使用的字符序列称为标识符
	java标识符命名规则:
		1.由字母(英,日,俄等),数字,下划线和美元符号组成
		2.不能以数字开头
		3.区分大小写
		4.长度无限制(一般不要超过15个字符)
		5.不能是java的保留字和关键字
	命名习惯:见名之意 驼峰命名规则

		包:最好是域名倒过来 要求 所有字母小写 com.qf.xxx
		类或者接口:
			如果是一个单词 首字母大写
			如果是多个单词 每个单词首字母大写
		方法或者变量
			如果是一个单词 首字母大写
			如果是多个单词 每个单词首字母大写
		常量
			如果是一个单词 所有字母都大写
			如果是多个单词 所有字母都大写 用下划线分割每个单词
		2java/ user#name/ hello world
		强烈建议 大家不要用java的类名来命名自己的类
		Date
		String Class1 原则上可以 但是不推荐
3.java关键字
	java中有一些被赋予了特定含义的,用专门的用途 这些字符串称为 关键字(keyword) 全部都是小写
		const goto 保留 不要用!
4.常量
	java中 固定不变的一些数据 固定不变的量
	java中的常量分类:
		1.整数常量: 所有整数
		2.小数常量: 所有小数
		3.布尔型常量:较为特殊 只有两个值 true /false
		4.字符常量: 将一个数字 字母 或 符号用单引号 括起来 'a'
		5.字符串常量: 将一个或者多个字符 用双引号括起来 ""空内容的字符串
		6.null常量: 只有一个数值 就是null
	对于整数常量 java有四种表现形式:
		二进制 : 0 /1
		十进制 : 0-9
		八进制 : 0-7 用0开头
		十六进制 : 0 - 9 A-F  用0x
5.进制转换
	1.进制的由来
		进制: 就是进位
	2.二进制
		位(bit) 标识一个二进制数 0 或者 1 是计算机存储的基本单位
		字节(byte) 一个字节由8位组成,它表示作为一个完成处理单位的8个二进制码
		0 +1 --> 0 
		1 +1 --> 1
		10 + 1 -->十进制数 2
		11 + 1
		100 + 1
		101 + 1
		110 + 1
		111 + 1
		1000 
	 1 byte = 8 bit
	 1 bit 可以表示几个数  0,1
	 2 bit 可以表示几个数 00,01,10,11

ASCII 美国标准信息交换码表
	256个
	前 128个为常用的字符 如 运算符 字母 数字等
	后 128个位特殊字符 键盘上找不到的字符

	windows dos -->chcp -->活动代码页:936 默认编码是 GBK
	mac 默认文字编码是utf-8 在windows下 解压mac打的包 就相当于用gbk来解析utf-8就出现乱码

	进制转换
		十进制 转 二进制
			原理: 对十进制数进行 除 2 的运算 取余数
			6 --> 110
		二进制 转 十进制
			原理: 二进制 乘以 2 的n次幂 的过程
			110 -> 

				0*2(0) + 1*2(1) + 1 * 2(2)
				    0  +  2     + 4
				=6

				2(0)   -->1
				2(1)   -->2
				2(2)   -->4
		 0   0  1  1 0 1 0 1
		128 64 32 16 8 4 2 1    = 53

		当 8个bit 都是 1  最大是 255 那么一个字节最大就是 255
		ip地址 一个段最大就是 255

		 5 + 4 = 9
		  101
		+ 100
	        ------
		 1001 内存中的计算方式
		(快速进制转换法)
			8421码
	负数的二进制
		其实就是 十进制数 转换成 二进制数后 取反+1

		6 = 110
		-6
		 一个整数类型 是 4个字节 1 int = 4 byte = 32 bit
		 0000-0000  0000-0000  0000-0000  0000-0110
		 1111-1111  1111-1111  1111-1111  1111-1001 取反
               + 0000-0000  0000-0000  0000-0000  0000-0001  +1
	       --------------------------------------------------
		 1111-1111  1111-1111  1111-1111  1111-1010  = -6

	二进制 转 十六进制
		先将十进制 转成 二进制 --> 十六进制
			四个二进制位 就是 一个 十六进制位
			1111 最大值是 8+4+2+1 = 15 逢16进1
		90
		0101-1010
                ---- ----
		   5 10-->A 90 --> 0x5A
	二进制 转 八进制
		三个二进制位 就是一个 八进制位
		111 = 4+2+1 = 7 逢8进1
		前面位数不够 拿0补

		001-011-010
		--- --- ---
		  1   3   2   = 0132

	65 --> 转成二进制 十六进制 八进制

6.变量的定义及初始化
	变量的概念:将不确定的数据进行存储 在内存空间中开辟一块空间 需要给一个类型 和名字
		java 强类型语言 对类型是有严格的划分的 在内存中分配的空间也大小不同
					js :var; alert
	变量的分类:
		按照所属的数据类型划分:
			基本数据类型变量
					数值型	
						整数类型 byte short int long
						浮点类型 float double
					字符型	char
					布尔型	boolean
				整数 默认 是 int 类型 ; 小数 默认是 double
			引用数据类型变量
					类(class)
					接口(interface)
					数组(Array [])
					枚举
		按照声明的位置划分:
			全局变量:方法外部 类的内部定义的变量
			局部变量:方法内部 或者 语句块内部定义 
	为什么要定义变量:
		用来不断的存放同一类型的常量,并且可以重复使用
	定义变量的格式:
		数据类型 变量名 = 初始化值;
			记住格式 以不变应万变
	注意:
		变量的作用域(范围) 是在一对{}之间有效
		一定要给初始化值

7.java的数据类型

	数值型	
		整数类型 byte short int long
			数据类型 字节数 位 取值范围
			byte       1    8   -128 ~ 127
			short      2    16  -2(15) ~ 2(15)-1
			int        4    32  -2(31) ~ 2(31)-1
			long       8    64  -2(63) ~ 2(63)-1
			//long类型的 那么要加上 'L' / 'l'
		拓展知识:
			kb(千字节) = 1024 byte   2的10次方
			mb(兆字节) = 1024 * kb 是的1024倍
			gb = 1024 * mb
			tb = 1024 * gb


		浮点类型 float double
			数据类型 字节数 位 
			float      4    32  
			double     8    64  
			double型比float型存储范围更大,精度更高.所以通常的浮点型数据不声明是默认是double
			如果要表示一个数据是float型 可以在数据后面加上"F"

			浮点型数据在底层 使用近似值来表示 不适用于在银行 电信领域存储金额
			BigDecimal --> 小数点后精确到的位数可以任意定制
	字符型	char
		有2个字节组成 16位  2的16次方 是 65535 表示范围 0-65535
			一个汉字是两个字节
			单个字符: 汉字,英文字母,特殊符号
				不允许 什么都没有''
		ASCII
			a~z 'a' -->97
			A~z 'A' -->65
			0~9 '0' -->48
		gb2312 --> 简体中文 
		gbk -->简体中文 繁体中文
		gb18030 --> 简体 繁体 生僻字
		iso-8859-1 -->西文字符集

	布尔型	boolean
		true/false
			
java的数据类型之间转换
		自动类型转换(隐式类型转换) 小 转 大
			1.所有的byte型,short型和 char型 将被提升到int
			2.如果一个操作数是long型,计算结果就是long型
			3.如果一个操作数是float型,计算结果就是float型
			4.如果一个操作数是double型,计算结果就是double型
		强制类型转换(显式类型转换) 大 转 小
			语法: 取值范围较小的类型 变量名 = (取值范围较小的类型)取值范围较大的类型
			如: int age = 16; byte age2 = (byte)age;
	注意:
		一旦 byte short char类型的变量参与运算,则运算结果表达式类型为 int型
			首先会自动提升 然后再参与运算
8.表达式
	表达式就是 由变量,常量,运算符组成的式子
		a<b;
9.java的运算符
	算术运算符:  +, - ,*, /, %, ++, --
	赋值运算符:  = , += ,-=,*=,/=,%=
	关系运算符:  > ,< ,>=,<=,==,!=
	逻辑运算符:  ! , & , |,^,&&,||
	位运算符:   &,|,^,~,>>,<<,>>>
	字符串连接符号: + 

	算数运算符:
		/ (除号的右边不能为0)

10.运算符的优先级和转义字符